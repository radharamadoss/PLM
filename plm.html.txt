
R version 3.6.1 (2019-07-05) -- "Action of the Toes"
Copyright (C) 2019 The R Foundation for Statistical Computing
Platform: x86_64-w64-mingw32/x64 (64-bit)

R is free software and comes with ABSOLUTELY NO WARRANTY.
You are welcome to redistribute it under certain conditions.
Type 'license()' or 'licence()' for distribution details.

R is a collaborative project with many contributors.
Type 'contributors()' for more information and
'citation()' on how to cite R or R packages in publications.

Type 'demo()' for some demos, 'help()' for on-line help, or
'help.start()' for an HTML browser interface to help.
Type 'q()' to quit R.

> library(caret)
Loading required package: lattice
Loading required package: ggplot2
Registered S3 methods overwritten by 'ggplot2':
  method         from 
  [.quosures     rlang
  c.quosures     rlang
  print.quosures rlang
> install.packages("randomForest", dependencies = T)
trying URL 'https://cran.rstudio.com/bin/windows/contrib/3.6/randomForest_4.6-14.zip'
Content type 'application/zip' length 250189 bytes (244 KB)
downloaded 244 KB

package ‘randomForest’ successfully unpacked and MD5 sums checked

The downloaded binary packages are in
	C:\Users\sasik\AppData\Local\Temp\Rtmpk7UOPa\downloaded_packages
> library(rpart) 
> find.package('rpart')
[1] "C:/Users/sasik/Anaconda3/Lib/R/library/rpart"
> library(RColorBrewer)
> install.packages("rattle")
also installing the dependencies ‘XML’, ‘rpart.plot’

trying URL 'https://cran.rstudio.com/bin/windows/contrib/3.6/XML_3.99-0.3.zip'
Content type 'application/zip' length 4258943 bytes (4.1 MB)
downloaded 4.1 MB

trying URL 'https://cran.rstudio.com/bin/windows/contrib/3.6/rpart.plot_3.0.8.zip'
Content type 'application/zip' length 1077637 bytes (1.0 MB)
downloaded 1.0 MB

trying URL 'https://cran.rstudio.com/bin/windows/contrib/3.6/rattle_5.3.0.zip'
Content type 'application/zip' length 5320173 bytes (5.1 MB)
downloaded 5.1 MB

package ‘XML’ successfully unpacked and MD5 sums checked
package ‘rpart.plot’ successfully unpacked and MD5 sums checked
package ‘rattle’ successfully unpacked and MD5 sums checked

The downloaded binary packages are in
	C:\Users\sasik\AppData\Local\Temp\Rtmpk7UOPa\downloaded_packages
> set.seed(1234)
> training <- read.csv("C:/Users/sasik/Downloads/pml-training.csv", na.strings=c("NA","#DIV/0!",""))
> 
> testing <- read.csv("C:/Users/sasik/Downloads/pml-testing.csv", na.strings=c("NA","#DIV/0!",""))
> inTrain <- createDataPartition(y=training$classe, p=0.6, list=FALSE)
> myTraining <- training[inTrain, ]; myTesting <- training[-inTrain, ]
> dim(myTraining); dim(myTesting) set.seed(1234)
[1] 11776   160
Error: unexpected symbol in " dim(myTesting) set.seed"
> dim(myTraining); dim(myTesting)
[1] 11776   160
[1] 7846  160
> myDataNZV <- nearZeroVar(myTraining, saveMetrics=TRUE)
> myNZVvars <- names(myTraining) %in% c("new_window", "kurtosis_roll_belt", "kurtosis_picth_belt",
+                                       + "kurtosis_yaw_belt", "skewness_roll_belt", "skewness_roll_belt.1", "skewness_yaw_belt",
+                                       + "max_yaw_belt", "min_yaw_belt", "amplitude_yaw_belt", "avg_roll_arm", "stddev_roll_arm",
+                                       + "var_roll_arm", "avg_pitch_arm", "stddev_pitch_arm", "var_pitch_arm", "avg_yaw_arm",
+                                       + "stddev_yaw_arm", "var_yaw_arm", "kurtosis_roll_arm", "kurtosis_picth_arm",
+                                       + "kurtosis_yaw_arm", "skewness_roll_arm", "skewness_pitch_arm", "skewness_yaw_arm",
+                                       + "max_roll_arm", "min_roll_arm", "min_pitch_arm", "amplitude_roll_arm", "amplitude_pitch_arm",
+                                       + "kurtosis_roll_dumbbell", "kurtosis_picth_dumbbell", "kurtosis_yaw_dumbbell", "skewness_roll_dumbbell",
+                                       + "skewness_pitch_dumbbell", "skewness_yaw_dumbbell", "max_yaw_dumbbell", "min_yaw_dumbbell",
+                                       + "amplitude_yaw_dumbbell", "kurtosis_roll_forearm", "kurtosis_picth_forearm", "kurtosis_yaw_forearm",
+                                       + "skewness_roll_forearm", "skewness_pitch_forearm", "skewness_yaw_forearm", "max_roll_forearm",
+                                       + "max_yaw_forearm", "min_roll_forearm", "min_yaw_forearm", "amplitude_roll_forearm",
+                                       + "amplitude_yaw_forearm", "avg_roll_forearm", "stddev_roll_forearm", "var_roll_forearm",
+                                       + "avg_pitch_forearm", "stddev_pitch_forearm", "var_pitch_forearm", "avg_yaw_forearm",
+                                       + "stddev_yaw_forearm", "var_yaw_forearm")
Error in +"kurtosis_yaw_belt" : invalid argument to unary operator
> 
> myNZVvars <- names(myTraining) %in% c("new_window", "kurtosis_roll_belt", "kurtosis_picth_belt",
+                                       "kurtosis_yaw_belt", "skewness_roll_belt", "skewness_roll_belt.1", "skewness_yaw_belt",
+                                       "max_yaw_belt", "min_yaw_belt", "amplitude_yaw_belt", "avg_roll_arm", "stddev_roll_arm",
+                                       "var_roll_arm", "avg_pitch_arm", "stddev_pitch_arm", "var_pitch_arm", "avg_yaw_arm",
+                                       "stddev_yaw_arm", "var_yaw_arm", "kurtosis_roll_arm", "kurtosis_picth_arm",
+                                       "kurtosis_yaw_arm", "skewness_roll_arm", "skewness_pitch_arm", "skewness_yaw_arm",
+                                       "max_roll_arm", "min_roll_arm", "min_pitch_arm", "amplitude_roll_arm", "amplitude_pitch_arm",
+                                       "kurtosis_roll_dumbbell", "kurtosis_picth_dumbbell", "kurtosis_yaw_dumbbell", "skewness_roll_dumbbell",
+                                       "skewness_pitch_dumbbell", "skewness_yaw_dumbbell", "max_yaw_dumbbell", "min_yaw_dumbbell",
+                                       "amplitude_yaw_dumbbell", "kurtosis_roll_forearm", "kurtosis_picth_forearm", "kurtosis_yaw_forearm",
+                                       "skewness_roll_forearm", "skewness_pitch_forearm", "skewness_yaw_forearm", "max_roll_forearm",
+                                       "max_yaw_forearm", "min_roll_forearm", "min_yaw_forearm", "amplitude_roll_forearm",
+                                       "amplitude_yaw_forearm", "avg_roll_forearm", "stddev_roll_forearm", "var_roll_forearm",
+                                       "avg_pitch_forearm", "stddev_pitch_forearm", "var_pitch_forearm", "avg_yaw_forearm",
+                                       "stddev_yaw_forearm", "var_yaw_forearm")
> myTraining <- myTraining[!myNZVvars]
> dim(myTraining)
[1] 11776   100
> myTraining <- myTraining[c(-1)]
> trainingV3 <- myTraining #creating another subset to iterate in loop
> for(i in 1:length(myTraining)) { #for every column in the training dataset
+     +         if( sum( is.na( myTraining[, i] ) ) /nrow(myTraining) >= .6 ) { #if n?? NAs > 60% of total observations
+         +         for(j in 1:length(trainingV3)) {
+             +             if( length( grep(names(myTraining[i]), names(trainingV3)[j]) ) ==1)  { #if the columns are the same:
+                 +                 trainingV3 <- trainingV3[ , -j] #Remove that column
+                 +             }   
Error: unexpected '}' in:
"                +                 trainingV3 <- trainingV3[ , -j] #Remove that column
                +             }"
>             +         } 
Error: unexpected '}' in "            +         }"
>         +     }
Error: unexpected '}' in "        +     }"
>     + }
Error: unexpected '}' in "    + }"
> 
> trainingV3 <- myTraining #creating another subset to iterate in loop
> for(i in 1:length(myTraining)) { #for every column in the training dataset
+     if( sum( is.na( myTraining[, i] ) ) /nrow(myTraining) >= .6 ) { #if n?? NAs > 60% of total observations
+         for(j in 1:length(trainingV3)) {
+             if( length( grep(names(myTraining[i]), names(trainingV3)[j]) ) ==1)  { #if the columns are the same:
+                 trainingV3 <- trainingV3[ , -j] #Remove that column
+             }   
+         } 
+     }
+ }
> myTraining <- trainingV3
> rm(trainingV3)
> clean1 <- colnames(myTraining)
> clean2 <- colnames(myTraining[, -58]) #already with classe column removed
> myTesting <- myTesting[clean1]
> testing <- testing[clean2]
> dim(myTesting)
[1] 7846   58
> dim(testing)
[1] 20 57
> for (i in 1:length(testing) ) {
+     +         for(j in 1:length(myTraining)) {
+         +         if( length( grep(names(myTraining[i]), names(testing)[j]) ) ==1)  {
+             +             class(testing[j]) <- class(myTraining[i])
+             +         }      
Error: unexpected '}' in:
"            +             class(testing[j]) <- class(myTraining[i])
            +         }"
>         +     }      
Error: unexpected '}' in "        +     }"
>     + }
Error: unexpected '}' in "    + }"
> 
> for (i in 1:length(testing) ) {
+     for(j in 1:length(myTraining)) {
+         if( length( grep(names(myTraining[i]), names(testing)[j]) ) ==1)  {
+             class(testing[j]) <- class(myTraining[i])
+         }      
+     }      
+ }
> testing <- rbind(myTraining[2, -58] , testing) 
> testing <- testing[-1,]
> modFitA1 <- rpart(classe ~ ., data=myTraining, method="class")
> predictionsA1 <- predict(modFitA1, myTesting, type = "class")
> confusionMatrix(predictionsA1, myTesting$classe)
Error: package e1071 is required
> confusionMatrix(predictionsA1, myTesting$classe)
Error: package e1071 is required
> install.packages("e1071")
trying URL 'https://cran.rstudio.com/bin/windows/contrib/3.6/e1071_1.7-3.zip'
Content type 'application/zip' length 1022230 bytes (998 KB)
downloaded 998 KB

package ‘e1071’ successfully unpacked and MD5 sums checked

The downloaded binary packages are in
	C:\Users\sasik\AppData\Local\Temp\Rtmpk7UOPa\downloaded_packages
> confusionMatrix(predictionsA1, myTesting$classe)
Confusion Matrix and Statistics

          Reference
Prediction    A    B    C    D    E
         A 2157   68   10    1    0
         B   60 1265   73   67    0
         C   15  177 1261  141   70
         D    0    8   15  962  111
         E    0    0    9  115 1261

Overall Statistics
                                          
               Accuracy : 0.8802          
                 95% CI : (0.8728, 0.8873)
    No Information Rate : 0.2845          
    P-Value [Acc > NIR] : < 2.2e-16       
                                          
                  Kappa : 0.8484          
                                          
 Mcnemar's Test P-Value : NA              

Statistics by Class:

                     Class: A Class: B Class: C Class: D Class: E
Sensitivity            0.9664   0.8333   0.9218   0.7481   0.8745
Specificity            0.9859   0.9684   0.9378   0.9796   0.9806
Pos Pred Value         0.9647   0.8635   0.7578   0.8777   0.9105
Neg Pred Value         0.9866   0.9604   0.9827   0.9520   0.9720
Prevalence             0.2845   0.1935   0.1744   0.1639   0.1838
Detection Rate         0.2749   0.1612   0.1607   0.1226   0.1607
Detection Prevalence   0.2850   0.1867   0.2121   0.1397   0.1765
Balanced Accuracy      0.9762   0.9009   0.9298   0.8638   0.9276
> library(randomForest)
randomForest 4.6-14
Type rfNews() to see new features/changes/bug fixes.

Attaching package: ‘randomForest’

The following object is masked from ‘package:ggplot2’:

    margin

Warning message:
package ‘randomForest’ was built under R version 3.6.3 
> randomForest
function (x, ...) 
UseMethod("randomForest")
<bytecode: 0x0000026b49871d08>
<environment: namespace:randomForest>
> modFitB1 <- randomForest(classe ~. , data=myTraining)
> 
> predictionsB1 <- predict(modFitB1, myTesting, type = "class")
> confusionMatrix(predictionsB1, myTesting$classe)
Confusion Matrix and Statistics

          Reference
Prediction    A    B    C    D    E
         A 2232    5    0    0    0
         B    0 1513    2    0    0
         C    0    0 1361    6    0
         D    0    0    5 1279    1
         E    0    0    0    1 1441

Overall Statistics
                                          
               Accuracy : 0.9975          
                 95% CI : (0.9961, 0.9984)
    No Information Rate : 0.2845          
    P-Value [Acc > NIR] : < 2.2e-16       
                                          
                  Kappa : 0.9968          
                                          
 Mcnemar's Test P-Value : NA              

Statistics by Class:

                     Class: A Class: B Class: C Class: D Class: E
Sensitivity            1.0000   0.9967   0.9949   0.9946   0.9993
Specificity            0.9991   0.9997   0.9991   0.9991   0.9998
Pos Pred Value         0.9978   0.9987   0.9956   0.9953   0.9993
Neg Pred Value         1.0000   0.9992   0.9989   0.9989   0.9998
Prevalence             0.2845   0.1935   0.1744   0.1639   0.1838
Detection Rate         0.2845   0.1928   0.1735   0.1630   0.1837
Detection Prevalence   0.2851   0.1931   0.1742   0.1638   0.1838
Balanced Accuracy      0.9996   0.9982   0.9970   0.9968   0.9996
> predictionsB2 <- predict(modFitB1, testing, type = "class")
> pml_write_files = function(x){
+     n = length(x)
+     for(i in 1:n){
+         filename = paste0("problem_id_",i,".txt")
+         write.table(x[i],file=filename,quote=FALSE,row.names=FALSE,col.names=FALSE)
+     }
+ }
> 
> pml_write_files(predictionsB2)
> predictionsB2
 1  2  3 41  5  6  7  8  9 10 11 12 13 14 15 16 17 18 19 20 
 B  A  B  A  A  E  D  B  A  A  B  C  B  A  E  E  A  B  B  B 
Levels: A B C D E